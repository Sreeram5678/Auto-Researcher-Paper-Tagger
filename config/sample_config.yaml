# Sample Configuration for Research Paper Tagger
# Copy this file and modify it for your specific use case
# Then use: python main.py tag-batch data/raw/ --config your_config.yaml

# Processing settings
processing:
  confidence_threshold: 0.4  # Minimum confidence for tag assignment (0.0 - 1.0)
  max_tags: 3               # Maximum number of tags per paper
  extraction_method: "auto" # PDF extraction method: "auto", "pymupdf", "pdfplumber", "pypdf2"

# Output settings
output:
  default_format: "both"    # Default output format: "csv", "json", "both"
  create_summary: true      # Create tag summary report
  organize_by_tags: true    # Organize files into tag-based directories
  rename_with_tags: false   # Rename files to include tags
  max_filename_tags: 2      # Maximum tags in filename

# Custom categories for your research domain
categories:
  # Computer Science - AI/ML
  "Artificial Intelligence":
    - "artificial intelligence"
    - "ai"
    - "expert system"
    - "knowledge representation"
    - "reasoning"
    - "automated planning"
    - "intelligent agent"
  
  "Computer Vision":
    - "computer vision"
    - "image processing"
    - "object detection"
    - "image classification"
    - "face recognition"
    - "optical character recognition"
    - "ocr"
    - "image segmentation"
    - "feature extraction"
    - "edge detection"
    - "image enhancement"
    - "pattern recognition"
    - "visual computing"
    - "image understanding"
    - "scene analysis"
    - "video processing"
    - "3d vision"
    - "stereo vision"
    - "motion analysis"
    - "tracking"
    - "pose estimation"
    - "action recognition"
    - "visual odometry"
    - "structure from motion"
    - "multi-view geometry"
    - "camera calibration"
    - "image registration"
    - "image fusion"
    - "medical imaging"
  
  "Natural Language Processing":
    - "nlp"
    - "natural language processing"
    - "text mining"
    - "sentiment analysis"
    - "machine translation"
    - "named entity recognition"
    - "part-of-speech tagging"
    - "language model"
    - "text classification"
    - "information extraction"
    - "text summarization"
    - "question answering"
    - "dialogue system"
    - "chatbot"
    - "language generation"
    - "text-to-speech"
    - "speech-to-text"
    - "computational linguistics"
    - "corpus linguistics"
    - "lexical analysis"
    - "syntactic analysis"
    - "semantic analysis"
    - "pragmatic analysis"
    - "discourse analysis"
    - "word embedding"
    - "language understanding"
    - "language modeling"
  
  "Machine Learning":
    - "machine learning"
    - "supervised learning"
    - "unsupervised learning"
    - "semi-supervised learning"
    - "reinforcement learning"
    - "deep learning"
    - "neural network"
    - "artificial neural network"
    - "backpropagation"
    - "gradient descent"
    - "optimization"
    - "feature engineering"
    - "model selection"
    - "cross-validation"
    - "overfitting"
    - "underfitting"
    - "bias-variance tradeoff"
    - "ensemble method"
    - "bagging"
    - "boosting"
    - "random forest"
    - "support vector machine"
    - "svm"
    - "decision tree"
    - "naive bayes"
    - "k-means clustering"
    - "dimensionality reduction"
    - "principal component analysis"
    - "pca"
  
  "Deep Learning":
    - "deep learning"
    - "neural network"
    - "convolutional neural network"
    - "cnn"
    - "recurrent neural network"
    - "rnn"
    - "long short-term memory"
    - "lstm"
    - "gated recurrent unit"
    - "gru"
    - "transformer"
    - "attention mechanism"
    - "self-attention"
    - "multi-head attention"
    - "feedforward network"
    - "activation function"
    - "relu"
    - "sigmoid"
    - "tanh"
    - "dropout"
    - "batch normalization"
    - "weight initialization"
    - "learning rate"
    - "optimizer"
    - "adam"
    - "sgd"
    - "momentum"
    - "regularization"
    - "early stopping"
  
  # Add your own custom categories here
  "Your Custom Category":
    - "keyword1"
    - "keyword2"
    - "specific term"
    - "domain-specific phrase"

# Advanced settings (optional)
advanced:
  # Text preprocessing
  remove_stopwords: true
  use_lemmatization: true
  min_word_length: 3
  
  # Classification
  use_tfidf: true
  tfidf_max_features: 10000
  tfidf_ngram_range: [1, 3]
  tfidf_min_df: 2
  tfidf_max_df: 0.95
  
  # Similarity weights
  tfidf_weight: 0.7         # Weight for TF-IDF similarity
  keyword_weight: 0.3       # Weight for keyword matching
  
  # Model persistence
  save_model: false         # Save trained model to disk
  model_path: "models/classifier.pkl"
